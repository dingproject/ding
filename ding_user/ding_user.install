<?php

/**
 * @file ding_user.install
 * Installation and upgrade hooks for the ding_user module.
 */

/**
 * Implementation of hook_install().
 */
function ding_user_install() {
  update_sql("UPDATE {system} SET weight = -10 WHERE name = 'ding_user'");
  drupal_install_schema('ding_user');
}

/**
 * Implementation of hook_uninstall().
 */
function ding_user_uninstall() {
  drupal_uninstall_schema('ding_user');
}

/**
 * Implementation of hook_schema().
 */
function ding_user_schema() {
  $schema = array();

  $schema['ding_user'] = array(
    'description' => t('Ding user data – stronger encrypted passwords, etc.'),
    'fields' => array(
      'uid' => array(
        'description' => t('{users}.uid for node'),
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
     'pass' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "User's password (hashed).",
      ),
      'display_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
        'description' => "User's display name.",
      ),
    ),
    'primary key' => array('uid'),
    'indexes' => array(
      'pass_uid' => array('pass', 'uid'),
    ),
  );

  return $schema;
}

/**
 * Implementation of hook_update_N().
 *
 * Add a display name column.
 */
function ding_user_update_6001() {
  $ret = array();
  db_add_field($ret, 'ding_user', 'display_name', array(
    'type' => 'varchar',
    'length' => 255,
    'not null' => TRUE,
    'default' => '',
    'description' => "User's display name.",
  ));
  return $ret;
}

/**
 * Update module weight.
 */
function ding_user_update_6002() {
  $ret = array();
  $ret[] = update_sql("UPDATE {system} SET weight = -10 WHERE name = 'ding_user'");
  return $ret;
}

/**
 * Remove path alias from alma users.
 */
function ding_user_update_6003() {
  $ret = array();

  $user_count = (integer) db_result(db_query("SELECT COUNT(uid) FROM {users} AS u WHERE u.name LIKE '%@alma_user'"));

  $uid_query = db_query("SELECT uid FROM {users} AS u WHERE u.name LIKE '%@alma_user'");

  // Make buckets of 50 uids, so we don't have to make a query for each user.
  $bucket_count = ceil($user_count / 50);
  $uids = array();
  while ($uid = (integer) db_result($uid_query)) {
    $uids[$uid % $bucket_count][] = $uid;
  }
  
  // Remove aliases for each bucket.
  foreach ($uids as $bucket) {
    $filter = array();

    foreach ($bucket as $uid) {
      $filter[] = 'user/' . $uid; 
    }

    $ret[] = update_sql("DELETE FROM {url_alias} WHERE src IN ('" . implode("','", $filter) . "')");
  }

  return $ret;
}
